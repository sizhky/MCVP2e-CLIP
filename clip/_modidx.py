# Autogenerated by nbdev

d = {
    "settings": {
        "branch": "dev",
        "doc_baseurl": "/clip",
        "doc_host": "https://sizhky.github.io",
        "git_url": "https://github.com/sizhky/clip",
        "lib_path": "clip",
    },
    "syms": {
        "clip.config": {
            "clip.config.ClipConfig": ("config.html#clipconfig", "clip/config.py"),
            "clip.config.ClipConfig.to_json_string": (
                "config.html#clipconfig.to_json_string",
                "clip/config.py",
            ),
        },
        "clip.core": {
            "clip.core.download_flickr8k_from_kaggle": (
                "core.html#download_flickr8k_from_kaggle",
                "clip/core.py",
            ),
            "clip.core.load_kaggle_key": ("core.html#load_kaggle_key", "clip/core.py"),
        },
        "clip.dataset": {
            "clip.dataset.CLIPDataset": ("dataset.html#clipdataset", "clip/dataset.py"),
            "clip.dataset.CLIPDataset.__getitem__": (
                "dataset.html#clipdataset.__getitem__",
                "clip/dataset.py",
            ),
            "clip.dataset.CLIPDataset.__init__": (
                "dataset.html#clipdataset.__init__",
                "clip/dataset.py",
            ),
            "clip.dataset.CLIPDataset.__len__": (
                "dataset.html#clipdataset.__len__",
                "clip/dataset.py",
            ),
            "clip.dataset.CLIPDataset.train_test_split": (
                "dataset.html#clipdataset.train_test_split",
                "clip/dataset.py",
            ),
            "clip.dataset.build_clip_data_loaders": (
                "dataset.html#build_clip_data_loaders",
                "clip/dataset.py",
            ),
            "clip.dataset.get_transforms": (
                "dataset.html#get_transforms",
                "clip/dataset.py",
            ),
            "clip.dataset.normalize": ("dataset.html#normalize", "clip/dataset.py"),
        },
        "clip.infer": {
            "clip.infer.find_matches": ("infer.html#find_matches", "clip/infer.py"),
            "clip.infer.get_image_embeddings": (
                "infer.html#get_image_embeddings",
                "clip/infer.py",
            ),
        },
        "clip.models": {
            "clip.models.CLIP": ("model.html#clip", "clip/models.py"),
            "clip.models.CLIP.__init__": ("model.html#clip.__init__", "clip/models.py"),
            "clip.models.CLIP.forward": ("model.html#clip.forward", "clip/models.py"),
            "clip.models.CLIP.from_pretrained": (
                "model.html#clip.from_pretrained",
                "clip/models.py",
            ),
            "clip.models.ImageEncoder": ("model.html#imageencoder", "clip/models.py"),
            "clip.models.ImageEncoder.__init__": (
                "model.html#imageencoder.__init__",
                "clip/models.py",
            ),
            "clip.models.ImageEncoder.forward": (
                "model.html#imageencoder.forward",
                "clip/models.py",
            ),
            "clip.models.ProjectionHead": (
                "model.html#projectionhead",
                "clip/models.py",
            ),
            "clip.models.ProjectionHead.__init__": (
                "model.html#projectionhead.__init__",
                "clip/models.py",
            ),
            "clip.models.ProjectionHead.forward": (
                "model.html#projectionhead.forward",
                "clip/models.py",
            ),
            "clip.models.TextEncoder": ("model.html#textencoder", "clip/models.py"),
            "clip.models.TextEncoder.__init__": (
                "model.html#textencoder.__init__",
                "clip/models.py",
            ),
            "clip.models.TextEncoder.forward": (
                "model.html#textencoder.forward",
                "clip/models.py",
            ),
            "clip.models.cross_entropy": ("model.html#cross_entropy", "clip/models.py"),
        },
        "clip.training": {},
    },
}
