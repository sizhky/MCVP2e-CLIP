# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_config.ipynb.

# %% auto 0
__all__ = ["ClipConfig"]

# %% ../nbs/01_config.ipynb 3
import json
import dataclasses
from .core import *
from torch_snippets import *


# %% ../nbs/01_config.ipynb 4
@dataclasses.dataclass
class ClipConfig:
    debug: int = False
    batch_size: int = 32
    num_workers: int = 2
    head_lr: float = 1e-3
    image_encoder_lr: float = 1e-4
    text_encoder_lr: float = 1e-5
    weight_decay = 1e-3
    patience: int = 1
    factor: float = 0.8
    epochs: int = 4
    device: str = "cuda" if torch.cuda.is_available() else "cpu"
    model_name: str = "resnet50"
    image_embedding: int = 2048
    distilbert_text_encoder_model = "distilbert-base-uncased"
    text_embedding: int = 768
    distilbert_text_tokenizer = "distilbert-base-uncased"
    max_length: int = 200
    pretrained: bool = True
    trainable: bool = True  # for both image encoder and text encoder
    temperature: float = 1.0
    # image size
    size: int = 224
    # for projection head; used for both image and text encoders
    num_projection_layers: int = 1
    projection_dim: int = 256
    dropout: float = 0.1
    target_token_idx: int = 0
    save_eval_and_logging_steps: int = 500

    def to_json_string(self):
        return json.dumps(dataclasses.asdict(self)) + "\n"
